require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"tabBarModule":[function(require,module,exports){

/*
	tabBarModule
	â€“
	Created by Petter Nilsson
	http://petter.pro
 */
var defaults, getItemFromName, setBadgeValue, setSelected, updateViews;

defaults = {
  screenWidth: Screen.width,
  screenHeight: Screen.height,
  barHeight: 98,
  labelOffset: -28,
  iconOffset: -12,
  tintColor: "#007aff",
  tintColorUnselected: "#929292",
  blur: 40,
  opacity: 0.75,
  borderShadow: "0px -1px 0px 0px rgba(0,0,0,0.32)",
  backgroundColor: "#f8f8f8",
  showLabels: true,
  badgeSize: 36,
  badgeColor: "#FF3B30"
};

defaults.labelTextStyle = {
  fontSize: "20px",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

defaults.badgeTextStyle = {
  fontSize: "26px",
  lineHeight: "36px",
  color: "#fff",
  textAlign: "center",
  fontFamily: "Helvetica Neue', sans-serif"
};

exports.defaults = defaults;

getItemFromName = function(name) {
  var item, j, len, ref;
  ref = this.items;
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      return item;
    }
  }
};

updateViews = function(selectedItem) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.view != null) {
      if (item.view === selectedItem.view) {
        item.view.visible = true;
      } else {
        item.view.visible = false;
      }
      if (item.blurView === selectedItem.blurView) {
        results.push(item.blurView.visible = true);
      } else {
        results.push(item.blurView.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

setSelected = function(name) {
  var item, j, len, ref, results;
  if (name !== this.selected) {
    ref = this.items;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      item = ref[j];
      if (item.name === name) {
        item.iconLayer.backgroundColor = defaults.tintColor;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColor
          };
        }
        if (item.iconLayer.selectedIcon) {
          item.iconLayer.style = {
            "-webkit-mask-image": "url(" + item.iconLayer.selectedIcon + ")"
          };
        }
        this.selected = item.name;
        this.updateViews(item);
        results.push(this.emit("tabBarDidSwitch", item.name));
      } else {
        item.iconLayer.backgroundColor = defaults.tintColorUnselected;
        if (item.labelLayer) {
          item.labelLayer.style = {
            "color": defaults.tintColorUnselected
          };
        }
        if (item.iconLayer.selectedIcon) {
          results.push(item.iconLayer.style = {
            "-webkit-mask-image": "url(" + item.iconLayer.icon + ")"
          });
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  }
};

setBadgeValue = function(name, value) {
  var item, j, len, ref, results;
  ref = this.items;
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    item = ref[j];
    if (item.name === name) {
      if (value) {
        item.badgeLayer.html = value;
        results.push(item.badgeLayer.visible = true);
      } else {
        results.push(item.badgeLayer.visible = false);
      }
    } else {
      results.push(void 0);
    }
  }
  return results;
};

exports.tabBar = function(barItems) {
  var background, badgeLayer, blurView, i, iconLayer, itemCount, itemLayer, labelLayer, name, params, tabBar;
  tabBar = new Layer({
    x: 0,
    y: defaults.screenHeight - defaults.barHeight,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor
  });
  tabBar.style = {
    "box-shadow": defaults.borderShadow
  };
  tabBar.getItemFromName = getItemFromName;
  tabBar.updateViews = updateViews;
  tabBar.setSelected = setSelected;
  tabBar.setBadgeValue = setBadgeValue;
  tabBar.selected = null;
  tabBar.items = [];
  background = new Layer({
    x: 0,
    y: 0,
    width: defaults.screenWidth,
    height: defaults.barHeight,
    backgroundColor: defaults.backgroundColor,
    opacity: defaults.opacity,
    superLayer: tabBar
  });
  itemCount = Object.keys(barItems).length;
  i = 0;
  for (name in barItems) {
    params = barItems[name];
    itemLayer = new Layer({
      backgroundColor: "none",
      width: defaults.screenWidth / itemCount,
      height: defaults.barHeight,
      x: i * (defaults.screenWidth / itemCount),
      y: 0,
      superLayer: tabBar,
      name: name
    });
    if (params.view != null) {
      blurView = params.view.copy();
      if (ScrollComponent.prototype.isPrototypeOf(blurView)) {
        blurView.content.blur = defaults.blur;
      } else {
        blurView.blur = defaults.blur;
      }
      blurView.superLayer = tabBar;
      blurView.index = 0;
      blurView.y = blurView.y - (defaults.screenHeight - defaults.barHeight);
      itemLayer.view = params.view;
      itemLayer.blurView = blurView;
    }
    iconLayer = new Layer({
      width: 60,
      height: 60,
      superLayer: itemLayer
    });
    iconLayer.icon = params.icon;
    if (params.selectedIcon != null) {
      iconLayer.selectedIcon = params.selectedIcon;
    }
    iconLayer.style = {
      "-webkit-mask-image": "url(" + iconLayer.icon + ")",
      "-webkit-mask-repeat": "no-repeat",
      "-webkit-mask-position": "center center"
    };
    iconLayer.centerX();
    iconLayer.centerY(defaults.iconOffset);
    itemLayer.iconLayer = iconLayer;
    if (defaults.showLabels) {
      labelLayer = new Layer({
        width: itemLayer.width,
        x: 0,
        y: defaults.barHeight + defaults.labelOffset,
        superLayer: itemLayer,
        backgroundColor: "none"
      });
      labelLayer.html = name;
      labelLayer.style = defaults.labelTextStyle;
      itemLayer.labelLayer = labelLayer;
    }
    badgeLayer = new Layer({
      width: defaults.badgeSize,
      height: defaults.badgeSize,
      x: 0,
      y: 6,
      borderRadius: 18,
      superLayer: itemLayer,
      backgroundColor: defaults.badgeColor
    });
    badgeLayer.style = defaults.badgeTextStyle;
    badgeLayer.centerX(26);
    itemLayer.badgeLayer = badgeLayer;
    itemLayer.badgeLayer.visible = false;
    tabBar.items.push(itemLayer);
    itemLayer.on(Events.Click, function() {
      return tabBar.setSelected(this.name);
    });
    i++;
  }
  tabBar.setSelected(tabBar.items[0].name);
  return tabBar;
};



},{}]},{},[])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvUGV0dGVyL1Byb2plY3RzL3RhYkJhck1vZHVsZS9hcHBzdG9yZS1leGFtcGxlLmZyYW1lci9tb2R1bGVzL3RhYkJhck1vZHVsZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUFBOzs7OztHQUFBO0FBQUEsSUFBQSxrRUFBQTs7QUFBQSxRQVFBLEdBQVc7QUFBQSxFQUNWLFdBQUEsRUFBYSxNQUFNLENBQUMsS0FEVjtBQUFBLEVBRVYsWUFBQSxFQUFjLE1BQU0sQ0FBQyxNQUZYO0FBQUEsRUFHVixTQUFBLEVBQVcsRUFIRDtBQUFBLEVBSVYsV0FBQSxFQUFhLENBQUEsRUFKSDtBQUFBLEVBS1YsVUFBQSxFQUFZLENBQUEsRUFMRjtBQUFBLEVBTVYsU0FBQSxFQUFXLFNBTkQ7QUFBQSxFQU9WLG1CQUFBLEVBQXFCLFNBUFg7QUFBQSxFQVFWLElBQUEsRUFBTSxFQVJJO0FBQUEsRUFTVixPQUFBLEVBQVMsSUFUQztBQUFBLEVBVVYsWUFBQSxFQUFjLG1DQVZKO0FBQUEsRUFXVixlQUFBLEVBQWlCLFNBWFA7QUFBQSxFQVlWLFVBQUEsRUFBWSxJQVpGO0FBQUEsRUFhVixTQUFBLEVBQVcsRUFiRDtBQUFBLEVBY1YsVUFBQSxFQUFZLFNBZEY7Q0FSWCxDQUFBOztBQUFBLFFBd0JRLENBQUMsY0FBVCxHQUEwQjtBQUFBLEVBQ3pCLFFBQUEsRUFBVSxNQURlO0FBQUEsRUFFekIsU0FBQSxFQUFXLFFBRmM7QUFBQSxFQUd6QixVQUFBLEVBQVksNkJBSGE7Q0F4QjFCLENBQUE7O0FBQUEsUUE2QlEsQ0FBQyxjQUFULEdBQTBCO0FBQUEsRUFDekIsUUFBQSxFQUFVLE1BRGU7QUFBQSxFQUV6QixVQUFBLEVBQVksTUFGYTtBQUFBLEVBR3pCLEtBQUEsRUFBTyxNQUhrQjtBQUFBLEVBSXpCLFNBQUEsRUFBVyxR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QSxJQTZEQSxTQUFTLENBQUMsVUFBVixHQUF1QixVQTdEdkIsQ0FBQTtBQUFBLElBOERBLFNBQVMsQ0FBQyxVQUFVLENBQUMsT0FBckIsR0FBK0IsS0E5RC9CLENBQUE7QUFBQSxJQWdFQSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQWIsQ0FBa0IsU0FBbEIsQ0FoRUEsQ0FBQTtBQUFBLElBa0VBLFNBQVMsQ0FBQyxFQUFWLENBQWEsTUFBTSxDQUFDLEtBQXBCLEVBQTJCLFNBQUEsR0FBQTthQUMxQixNQUFNLENBQUMsV0FBUCxDQUFtQixJQUFDLENBQUEsSUFBcEIsRUFEMEI7SUFBQSxDQUEzQixDQWxFQSxDQUFBO0FBQUEsSUFxRUEsQ0FBQSxFQXJFQSxDQUREO0FBQUEsR0EzQkE7QUFBQSxFQW9HQSxNQUFNLENBQUMsV0FBUCxDQUFtQixNQUFNLENBQUMsS0FBTSxDQUFBLENBQUEsQ0FBRSxDQUFDLElBQW5DLENBcEdBLENBQUE7QUFzR0EsU0FBTyxNQUFQLENBekdnQjtBQUFBLENBckZqQixDQUFBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIiMjI1xuXHR0YWJCYXJNb2R1bGVcblx04oCTXG5cdENyZWF0ZWQgYnkgUGV0dGVyIE5pbHNzb25cblx0aHR0cDovL3BldHRlci5wcm9cbiMjI1xuXG4jIERlZmF1bHQgc3R5bGVzXG5kZWZhdWx0cyA9IHtcblx0c2NyZWVuV2lkdGg6IFNjcmVlbi53aWR0aFxuXHRzY3JlZW5IZWlnaHQ6IFNjcmVlbi5oZWlnaHRcblx0YmFySGVpZ2h0OiA5OFxuXHRsYWJlbE9mZnNldDogLTI4XG5cdGljb25PZmZzZXQ6IC0xMlxuXHR0aW50Q29sb3I6IFwiIzAwN2FmZlwiXG5cdHRpbnRDb2xvclVuc2VsZWN0ZWQ6IFwiIzkyOTI5MlwiXG5cdGJsdXI6IDQwXG5cdG9wYWNpdHk6IDAuNzVcblx0Ym9yZGVyU2hhZG93OiBcIjBweCAtMXB4IDBweCAwcHggcmdiYSgwLDAsMCwwLjMyKVwiXG5cdGJhY2tncm91bmRDb2xvcjogXCIjZjhmOGY4XCJcblx0c2hvd0xhYmVsczogdHJ1ZVxuXHRiYWRnZVNpemU6IDM2XG5cdGJhZGdlQ29sb3I6IFwiI0ZGM0IzMFwiXG59XG5kZWZhdWx0cy5sYWJlbFRleHRTdHlsZSA9IHtcblx0Zm9udFNpemU6IFwiMjBweFwiXG5cdHRleHRBbGlnbjogXCJjZW50ZXJcIlxuXHRmb250RmFtaWx5OiBcIkhlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZlwiXG59XG5kZWZhdWx0cy5iYWRnZVRleHRTdHlsZSA9IHtcblx0Zm9udFNpemU6IFwiMjZweFwiXG5cdGxpbmVIZWlnaHQ6IFwiMzZweFwiXG5cdGNvbG9yOiBcIiNmZmZcIlxuXHR0ZXh0QWxpZ246IFwiY2VudGVyXCJcblx0Zm9udEZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWZcIlxufVxuZXhwb3J0cy5kZWZhdWx0cyA9IGRlZmF1bHRzXG5cblxuZ2V0SXRlbUZyb21OYW1lID0gKG5hbWUpIC0+XG5cdCMgUmV0dXJucyBhIHRhYiBiYXIgaXRlbSBpZiBuYW1lcyBtYXRjaGVzXG5cblx0Zm9yIGl0ZW0gaW4gQGl0ZW1zXG5cdFx0cmV0dXJuIGl0ZW0gaWYgaXRlbS5uYW1lIGlzIG5hbWVcblxuXG51cGRhdGVWaWV3cyA9IChzZWxlY3RlZEl0ZW0pIC0+XG5cdCMgU2hvd3MvaGlkZXMgdmlld3MgYmFzZWQgb24gc2VsZWN0ZWQgdGFiIGJhciBpdGVtXG5cblx0Zm9yIGl0ZW0gaW4gQGl0ZW1zXG5cdFx0aWYgaXRlbS52aWV3P1xuXHRcdFx0aWYgaXRlbS52aWV3IGlzIHNlbGVjdGVkSXRlbS52aWV3IHRoZW4gaXRlbS52aWV3LnZpc2libGUgPSB0cnVlIGVsc2UgaXRlbS52aWV3LnZpc2libGUgPSBmYWxzZVxuXHRcdFx0aWYgaXRlbS5ibHVyVmlldyBpcyBzZWxlY3RlZEl0ZW0uYmx1clZpZXcgdGhlbiBpdGVtLmJsdXJWaWV3LnZpc2libGUgPSB0cnVlIGVsc2UgaXRlbS5ibHVyVmlldy52aXNpYmxlID0gZmFsc2VcblxuXG5zZXRTZWxlY3RlZCA9IChuYW1lKSAtPlxuXHQjIFNldHMgc2VsZWN0ZWQgdGFiIGl0ZW0gZnJvbSB0aGUga2V5IChuYW1lKSB1c2VkIHdoZW4gY3JlYXRpbmcgaXRcblxuXHRpZiBuYW1lICE9IEBzZWxlY3RlZFxuXHRcdGZvciBpdGVtIGluIEBpdGVtc1xuXHRcdFx0aWYgaXRlbS5uYW1lIGlzIG5hbWVcblx0XHRcdFx0aXRlbS5pY29uTGF5ZXIuYmFja2dyb3VuZENvbG9yID0gZGVmYXVsdHMudGludENvbG9yXG5cdFx0XHRcdGl0ZW0ubGFiZWxMYXllci5zdHlsZSA9IFwiY29sb3JcIjogZGVmYXVsdHMudGludENvbG9yIGlmIGl0ZW0ubGFiZWxMYXllclxuXHRcdFx0XHRpdGVtLmljb25MYXllci5zdHlsZSA9IFwiLXdlYmtpdC1tYXNrLWltYWdlXCI6IFwidXJsKFwiICsgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uICsgXCIpXCIgaWYgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uXG5cdFx0XHRcdEBzZWxlY3RlZCA9IGl0ZW0ubmFtZVxuXHRcdFx0XHRAdXBkYXRlVmlld3MoaXRlbSlcblx0XHRcdFx0QC5lbWl0KFwidGFiQmFyRGlkU3dpdGNoXCIsIGl0ZW0ubmFtZSlcblx0XHRcdGVsc2Vcblx0XHRcdFx0aXRlbS5pY29uTGF5ZXIuYmFja2dyb3VuZENvbG9yID0gZGVmYXVsdHMudGludENvbG9yVW5zZWxlY3RlZFxuXHRcdFx0XHRpdGVtLmxhYmVsTGF5ZXIuc3R5bGUgPSBcImNvbG9yXCI6IGRlZmF1bHRzLnRpbnRDb2xvclVuc2VsZWN0ZWQgaWYgaXRlbS5sYWJlbExheWVyXG5cdFx0XHRcdGl0ZW0uaWNvbkxheWVyLnN0eWxlID0gXCItd2Via2l0LW1hc2staW1hZ2VcIjogXCJ1cmwoXCIgKyBpdGVtLmljb25MYXllci5pY29uICsgXCIpXCIgaWYgaXRlbS5pY29uTGF5ZXIuc2VsZWN0ZWRJY29uXG5cblxuc2V0QmFkZ2VWYWx1ZSA9IChuYW1lLCB2YWx1ZSkgLT5cblx0IyBBZGRzIGEgYmFkZ2UgdG8gdGhlIHRhYiBpdGVtIGlmIHZhbHVlIGlzIGEgbnVtYmVyID4gMCBhbmQgcmVtb3ZlcyB0aGUgYmFkZ2UgaWYgbnVsbFxuXG5cdGZvciBpdGVtIGluIEBpdGVtc1xuXHRcdGlmIGl0ZW0ubmFtZSBpcyBuYW1lXG5cdFx0XHRpZiB2YWx1ZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIuaHRtbCA9IHZhbHVlXG5cdFx0XHRcdGl0ZW0uYmFkZ2VMYXllci52aXNpYmxlID0gdHJ1ZVxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRpdGVtLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblxuZXhwb3J0cy50YWJCYXIgPSAoYmFySXRlbXMpIC0+XG5cdCMgQ3JlYXRlcyBhbmQgc2V0LXVwcyB0aGUgdGFiIGJhclxuXG5cdHRhYkJhciA9IG5ldyBMYXllclxuXHRcdHg6IDBcblx0XHR5OiBkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHRcblx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGhcblx0XHRoZWlnaHQ6IGRlZmF1bHRzLmJhckhlaWdodFxuXHRcdGJhY2tncm91bmRDb2xvcjogZGVmYXVsdHMuYmFja2dyb3VuZENvbG9yXG5cblx0dGFiQmFyLnN0eWxlID0gXCJib3gtc2hhZG93XCI6IGRlZmF1bHRzLmJvcmRlclNoYWRvd1xuXHR0YWJCYXIuZ2V0SXRlbUZyb21OYW1lID0gZ2V0SXRlbUZyb21OYW1lXG5cdHRhYkJhci51cGRhdGVWaWV3cyA9IHVwZGF0ZVZpZXdzXG5cdHRhYkJhci5zZXRTZWxlY3RlZCA9IHNldFNlbGVjdGVkXG5cdHRhYkJhci5zZXRCYWRnZVZhbHVlID0gc2V0QmFkZ2VWYWx1ZVxuXHR0YWJCYXIuc2VsZWN0ZWQgPSBudWxsXG5cdHRhYkJhci5pdGVtcyA9IFtdXG5cblx0YmFja2dyb3VuZCA9IG5ldyBMYXllclxuXHRcdHg6IDBcblx0XHR5OiAwXG5cdFx0d2lkdGg6IGRlZmF1bHRzLnNjcmVlbldpZHRoXG5cdFx0aGVpZ2h0OiBkZWZhdWx0cy5iYXJIZWlnaHRcblx0XHRiYWNrZ3JvdW5kQ29sb3I6IGRlZmF1bHRzLmJhY2tncm91bmRDb2xvclxuXHRcdG9wYWNpdHk6IGRlZmF1bHRzLm9wYWNpdHlcblx0XHRzdXBlckxheWVyOiB0YWJCYXJcblxuXHRpdGVtQ291bnQgPSBPYmplY3Qua2V5cyhiYXJJdGVtcykubGVuZ3RoXG5cdGkgPSAwXG5cblx0Zm9yIG5hbWUscGFyYW1zIG9mIGJhckl0ZW1zXG5cdFx0aXRlbUxheWVyID0gbmV3IExheWVyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHR3aWR0aDogZGVmYXVsdHMuc2NyZWVuV2lkdGggLyBpdGVtQ291bnRcblx0XHRcdGhlaWdodDogZGVmYXVsdHMuYmFySGVpZ2h0XG5cdFx0XHR4OiBpICogKGRlZmF1bHRzLnNjcmVlbldpZHRoIC8gaXRlbUNvdW50KVxuXHRcdFx0eTogMFxuXHRcdFx0c3VwZXJMYXllcjogdGFiQmFyXG5cdFx0XHRuYW1lOiBuYW1lXG5cblx0XHRpZiBwYXJhbXMudmlldz9cblx0XHRcdCMgQ3JlYXRlIGEgY29weSBvZiB0aGUgdmlldywgYmx1ciBpdCBhbmQgdXNlIGl0IGFzIGEgYmFja2dyb3VuZFxuXHRcdFx0Ymx1clZpZXcgPSBwYXJhbXMudmlldy5jb3B5KClcblx0XHRcdGlmIFNjcm9sbENvbXBvbmVudC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihibHVyVmlldylcblx0XHRcdFx0Ymx1clZpZXcuY29udGVudC5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0ZWxzZVxuXHRcdFx0XHRibHVyVmlldy5ibHVyID0gZGVmYXVsdHMuYmx1clxuXHRcdFx0Ymx1clZpZXcuc3VwZXJMYXllciA9IHRhYkJhclxuXHRcdFx0Ymx1clZpZXcuaW5kZXggPSAwXG5cdFx0XHRibHVyVmlldy55ID0gYmx1clZpZXcueSAtIChkZWZhdWx0cy5zY3JlZW5IZWlnaHQgLSBkZWZhdWx0cy5iYXJIZWlnaHQpXG5cblx0XHRcdGl0ZW1MYXllci52aWV3ID0gcGFyYW1zLnZpZXdcblx0XHRcdGl0ZW1MYXllci5ibHVyVmlldyA9IGJsdXJWaWV3XG5cblx0XHRpY29uTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdHdpZHRoOiA2MFxuXHRcdFx0aGVpZ2h0OiA2MFxuXHRcdFx0c3VwZXJMYXllcjogaXRlbUxheWVyXG5cdFx0aWNvbkxheWVyLmljb24gPSBwYXJhbXMuaWNvblxuXHRcdGljb25MYXllci5zZWxlY3RlZEljb24gPSBwYXJhbXMuc2VsZWN0ZWRJY29uIGlmIHBhcmFtcy5zZWxlY3RlZEljb24/XG5cblx0XHQjIFRoaXMgYmxhY2sgbWFnaWMgaXMgdXNlZCB0byB0aW50IHRoZSBQTkcgaW1hZ2VzLiBPbmx5IHdvcmtzIG9uIHdlYmtpdCBicm93c2VycyA6L1xuXHRcdGljb25MYXllci5zdHlsZSA9XG5cdFx0XHRcIi13ZWJraXQtbWFzay1pbWFnZVwiOiBcInVybChcIiArIGljb25MYXllci5pY29uICsgXCIpXCJcblx0XHRcdFwiLXdlYmtpdC1tYXNrLXJlcGVhdFwiOiBcIm5vLXJlcGVhdFwiXG5cdFx0XHRcIi13ZWJraXQtbWFzay1wb3NpdGlvblwiOiBcImNlbnRlciBjZW50ZXJcIlxuXHRcdGljb25MYXllci5jZW50ZXJYKClcblx0XHRpY29uTGF5ZXIuY2VudGVyWShkZWZhdWx0cy5pY29uT2Zmc2V0KVxuXHRcdGl0ZW1MYXllci5pY29uTGF5ZXIgPSBpY29uTGF5ZXJcblxuXHRcdGlmIGRlZmF1bHRzLnNob3dMYWJlbHNcblx0XHRcdGxhYmVsTGF5ZXIgPSBuZXcgTGF5ZXJcblx0XHRcdFx0d2lkdGg6IGl0ZW1MYXllci53aWR0aFxuXHRcdFx0XHR4OiAwXG5cdFx0XHRcdHk6IGRlZmF1bHRzLmJhckhlaWdodCArIGRlZmF1bHRzLmxhYmVsT2Zmc2V0XG5cdFx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IFwibm9uZVwiXG5cdFx0XHRsYWJlbExheWVyLmh0bWwgPSBuYW1lXG5cdFx0XHRsYWJlbExheWVyLnN0eWxlID0gZGVmYXVsdHMubGFiZWxUZXh0U3R5bGVcblx0XHRcdGl0ZW1MYXllci5sYWJlbExheWVyID0gbGFiZWxMYXllclxuXG5cdFx0YmFkZ2VMYXllciA9IG5ldyBMYXllclxuXHRcdFx0d2lkdGg6IGRlZmF1bHRzLmJhZGdlU2l6ZVxuXHRcdFx0aGVpZ2h0OiBkZWZhdWx0cy5iYWRnZVNpemVcblx0XHRcdHg6IDBcblx0XHRcdHk6IDZcblx0XHRcdGJvcmRlclJhZGl1czogMThcblx0XHRcdHN1cGVyTGF5ZXI6IGl0ZW1MYXllclxuXHRcdFx0YmFja2dyb3VuZENvbG9yOiBkZWZhdWx0cy5iYWRnZUNvbG9yXG5cdFx0YmFkZ2VMYXllci5zdHlsZSA9IGRlZmF1bHRzLmJhZGdlVGV4dFN0eWxlXG5cdFx0YmFkZ2VMYXllci5jZW50ZXJYKDI2KVxuXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIgPSBiYWRnZUxheWVyXG5cdFx0aXRlbUxheWVyLmJhZGdlTGF5ZXIudmlzaWJsZSA9IGZhbHNlXG5cblx0XHR0YWJCYXIuaXRlbXMucHVzaChpdGVtTGF5ZXIpXG5cblx0XHRpdGVtTGF5ZXIub24gRXZlbnRzLkNsaWNrLCAtPlxuXHRcdFx0dGFiQmFyLnNldFNlbGVjdGVkKEBuYW1lKVxuXG5cdFx0aSsrXG5cblx0IyBTZWxlY3QgdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIHRhYiBiYXJcblx0dGFiQmFyLnNldFNlbGVjdGVkKHRhYkJhci5pdGVtc1swXS5uYW1lKVxuXG5cdHJldHVybiB0YWJCYXJcbiJdfQ==
